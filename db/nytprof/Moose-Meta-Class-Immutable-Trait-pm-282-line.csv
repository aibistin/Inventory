# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moose::Meta::Class::Immutable::Trait;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Moose::Meta::Class::Immutable::Trait::AUTHORITY = 'cpan:STEVAN';
0.000034,1,0.000034,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Moose::Meta::Class::Immutable::Trait::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000034,2,0.000017,use strict;
0.000034,2,0.000017,use warnings;
0.000000,0,0.000000,
0.000033,2,0.000016,use Class::MOP;
0.000036,2,0.000018,use Scalar::Util qw( blessed );
0.000000,0,0.000000,
0.000200,2,0.000100,use base 'Class::MOP::Class::Immutable::Trait';
0.000000,0,0.000000,
0.000000,0,0.000000,sub add_role { $_[1]->_immutable_cannot_call }
0.000000,0,0.000000,
0.000000,0,0.000000,sub calculate_all_roles {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,@{ $self->{__immutable}{calculate_all_roles} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub calculate_all_roles_with_inheritance {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,@{ $self->{__immutable}{calculate_all_roles_with_inheritance} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub does_role {
0.000000,0,0.000000,shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,my $role = shift;
0.000000,0,0.000000,
0.000000,0,0.000000,(defined $role)
0.000000,0,0.000000,|| $self->throw_error("You must supply a role name to look for");
0.000000,0,0.000000,
0.000000,0,0.000000,$self->{__immutable}{does_role} ||= { map { $_->name => 1 } $self->calculate_all_roles_with_inheritance };
0.000000,0,0.000000,
0.000000,0,0.000000,my $name = blessed $role ? $role->name : $role;
0.000000,0,0.000000,
0.000000,0,0.000000,return $self->{__immutable}{does_role}{$name};
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Implements immutability for metaclass objects
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
