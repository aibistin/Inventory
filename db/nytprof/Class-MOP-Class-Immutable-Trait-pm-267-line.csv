# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Class::MOP::Class::Immutable::Trait;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Class::MOP::Class::Immutable::Trait::AUTHORITY = 'cpan:STEVAN';
0.000041,1,0.000041,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Class::MOP::Class::Immutable::Trait::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000034,2,0.000017,use strict;
0.000034,2,0.000017,use warnings;
0.000000,0,0.000000,
0.000038,2,0.000019,use MRO::Compat;
0.000000,0,0.000000,
0.000038,2,0.000019,use Carp 'confess';
0.000176,2,0.000088,use Scalar::Util 'blessed', 'weaken';
0.000000,0,0.000000,
0.000000,0,0.000000,# the original class of the metaclass instance
0.000161,26,0.000006,sub _get_mutable_metaclass_name { $_[0]{__immutable}{original_class} }
0.000000,0,0.000000,
0.000000,0,0.000000,sub is_mutable   { 0 }
0.000144,26,0.000006,sub is_immutable { 1 }
0.000000,0,0.000000,
0.000000,0,0.000000,sub _immutable_metaclass { ref $_[1] }
0.000000,0,0.000000,
0.000000,0,0.000000,sub _immutable_read_only {
0.000000,0,0.000000,my $name = shift;
0.000000,0,0.000000,confess "The '$name' method is read-only when called on an immutable instance";
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _immutable_cannot_call {
0.000000,0,0.000000,my $name = shift;
0.000000,0,0.000000,Carp::confess "The '$name' method cannot be called on an immutable instance";
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,for my $name (qw/superclasses/) {
0.000105,2,0.000052,no strict 'refs';
0.000000,0,0.000000,*{__PACKAGE__."::$name"} = sub {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,_immutable_read_only($name) if @_;
0.000000,0,0.000000,$self->$orig;
0.000010,1,0.000010,};
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,for my $name (qw/add_method alias_method remove_method add_attribute remove_attribute remove_package_symbol add_package_symbol/) {
0.000301,2,0.000150,no strict 'refs';
0.000044,7,0.000006,*{__PACKAGE__."::$name"} = sub { _immutable_cannot_call($name) };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub class_precedence_list {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,@{ $self->{__immutable}{class_precedence_list}
0.000000,0,0.000000,||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub linearized_isa {
0.000099,65,0.000002,my $orig = shift;
0.000101,65,0.000002,my $self = shift;
0.000505,65,0.000008,@{ $self->{__immutable}{linearized_isa} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub get_all_methods {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,@{ $self->{__immutable}{get_all_methods} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub get_all_method_names {
0.000000,0,0.000000,my $orig = shift;
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,@{ $self->{__immutable}{get_all_method_names} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub get_all_attributes {
0.000079,52,0.000002,my $orig = shift;
0.000073,52,0.000001,my $self = shift;
0.000415,52,0.000008,@{ $self->{__immutable}{get_all_attributes} ||= [ $self->$orig ] };
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub get_meta_instance {
0.000449,305,0.000001,my $orig = shift;
0.000419,305,0.000001,my $self = shift;
0.001851,305,0.000006,$self->{__immutable}{get_meta_instance} ||= $self->$orig;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _method_map {
0.000367,241,0.000002,my $orig = shift;
0.000334,241,0.000001,my $self = shift;
0.001639,241,0.000007,$self->{__immutable}{_method_map} ||= $self->$orig;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000007,1,0.000007,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Implements immutability for metaclass objects
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
