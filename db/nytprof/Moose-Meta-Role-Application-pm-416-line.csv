# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moose::Meta::Role::Application;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Moose::Meta::Role::Application::AUTHORITY = 'cpan:STEVAN';
0.000034,1,0.000034,}
0.000000,0,0.000000,{
0.000005,2,0.000003,$Moose::Meta::Role::Application::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000037,2,0.000019,use strict;
0.000035,2,0.000017,use warnings;
0.000561,2,0.000281,use metaclass;
0.000000,0,0.000000,
0.000000,0,0.000000,__PACKAGE__->meta->add_attribute('method_exclusions' => (
0.000000,0,0.000000,init_arg => '-excludes',
0.000000,0,0.000000,reader   => 'get_method_exclusions',
0.000000,0,0.000000,default  => sub { [] },
0.000018,1,0.000018,Class::MOP::_definition_context(),
0.000000,0,0.000000,));
0.000000,0,0.000000,
0.000000,0,0.000000,__PACKAGE__->meta->add_attribute('method_aliases' => (
0.000000,0,0.000000,init_arg => '-alias',
0.000000,0,0.000000,reader   => 'get_method_aliases',
0.000000,0,0.000000,default  => sub { {} },
0.000015,1,0.000015,Class::MOP::_definition_context(),
0.000000,0,0.000000,));
0.000000,0,0.000000,
0.000000,0,0.000000,sub new {
0.000000,0,0.000000,my ($class, %params) = @_;
0.000000,0,0.000000,$class->_new(\%params);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub is_method_excluded {
0.000000,0,0.000000,my ($self, $method_name) = @_;
0.000000,0,0.000000,foreach (@{$self->get_method_exclusions}) {
0.000000,0,0.000000,return 1 if $_ eq $method_name;
0.000000,0,0.000000,}
0.000000,0,0.000000,return 0;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub is_method_aliased {
0.000000,0,0.000000,my ($self, $method_name) = @_;
0.000000,0,0.000000,exists $self->get_method_aliases->{$method_name} ? 1 : 0
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub is_aliased_method {
0.000000,0,0.000000,my ($self, $method_name) = @_;
0.000000,0,0.000000,my %aliased_names = reverse %{$self->get_method_aliases};
0.000000,0,0.000000,exists $aliased_names{$method_name} ? 1 : 0;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub apply {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,
0.000000,0,0.000000,$self->check_role_exclusions(@_);
0.000000,0,0.000000,$self->check_required_methods(@_);
0.000000,0,0.000000,$self->check_required_attributes(@_);
0.000000,0,0.000000,
0.000000,0,0.000000,$self->apply_attributes(@_);
0.000000,0,0.000000,$self->apply_methods(@_);
0.000000,0,0.000000,
0.000000,0,0.000000,$self->apply_override_method_modifiers(@_);
0.000000,0,0.000000,
0.000000,0,0.000000,$self->apply_before_method_modifiers(@_);
0.000000,0,0.000000,$self->apply_around_method_modifiers(@_);
0.000000,0,0.000000,$self->apply_after_method_modifiers(@_);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub check_role_exclusions           { Carp::croak "Abstract Method" }
0.000000,0,0.000000,sub check_required_methods          { Carp::croak "Abstract Method" }
0.000000,0,0.000000,sub check_required_attributes       { Carp::croak "Abstract Method" }
0.000000,0,0.000000,
0.000000,0,0.000000,sub apply_attributes                { Carp::croak "Abstract Method" }
0.000000,0,0.000000,sub apply_methods                   { Carp::croak "Abstract Method" }
0.000000,0,0.000000,sub apply_override_method_modifiers { Carp::croak "Abstract Method" }
0.000000,0,0.000000,sub apply_method_modifiers          { Carp::croak "Abstract Method" }
0.000000,0,0.000000,
0.000000,0,0.000000,sub apply_before_method_modifiers   { (shift)->apply_method_modifiers('before' => @_) }
0.000000,0,0.000000,sub apply_around_method_modifiers   { (shift)->apply_method_modifiers('around' => @_) }
0.000000,0,0.000000,sub apply_after_method_modifiers    { (shift)->apply_method_modifiers('after'  => @_) }
0.000000,0,0.000000,
0.000007,1,0.000007,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: A base class for role application
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
