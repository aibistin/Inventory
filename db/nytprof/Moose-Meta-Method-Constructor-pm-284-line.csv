# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,
0.000000,0,0.000000,package Moose::Meta::Method::Constructor;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Moose::Meta::Method::Constructor::AUTHORITY = 'cpan:STEVAN';
0.000032,1,0.000032,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Moose::Meta::Method::Constructor::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000032,2,0.000016,use strict;
0.000035,2,0.000018,use warnings;
0.000000,0,0.000000,
0.000031,2,0.000015,use Carp ();
0.000037,2,0.000019,use List::MoreUtils 'any';
0.000032,2,0.000016,use Scalar::Util 'blessed', 'weaken', 'looks_like_number', 'refaddr';
0.000041,2,0.000021,use Try::Tiny;
0.000000,0,0.000000,
0.000010,1,0.000010,use base 'Moose::Meta::Method',
0.000165,1,0.000165,'Class::MOP::Method::Constructor';
0.000000,0,0.000000,
0.000000,0,0.000000,sub new {
0.000002,1,0.000002,my $class   = shift;
0.000004,1,0.000004,my %options = @_;
0.000000,0,0.000000,
0.000002,1,0.000002,my $meta = $options{metaclass};
0.000000,0,0.000000,
0.000002,1,0.000002,(ref $options{options} eq 'HASH')
0.000000,0,0.000000,|| $class->throw_error("You must pass a hash of options", data => $options{options});
0.000000,0,0.000000,
0.000002,1,0.000002,($options{package_name} && $options{name})
0.000000,0,0.000000,|| $class->throw_error("You must supply the package_name and name parameters $Class::MOP::Method::UPGRADE_ERROR_TEXT");
0.000000,0,0.000000,
0.000006,1,0.000006,my $self = bless {
0.000000,0,0.000000,'body'          => undef,
0.000000,0,0.000000,'package_name'  => $options{package_name},
0.000000,0,0.000000,'name'          => $options{name},
0.000000,0,0.000000,'options'       => $options{options},
0.000000,0,0.000000,'associated_metaclass' => $meta,
0.000000,0,0.000000,'definition_context' => $options{definition_context},
0.000000,0,0.000000,'_expected_method_class' => $options{_expected_method_class} || 'Moose::Object',
0.000000,0,0.000000,} => $class;
0.000000,0,0.000000,
0.000000,0,0.000000,# we don't want this creating
0.000000,0,0.000000,# a cycle in the code, if not
0.000000,0,0.000000,# needed
0.000286,1,0.000286,weaken($self->{'associated_metaclass'});
0.000000,0,0.000000,
0.000005,1,0.000005,$self->_initialize_body;
0.000000,0,0.000000,
0.000009,1,0.000009,return $self;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,## method
0.000000,0,0.000000,
0.000000,0,0.000000,sub _initialize_body {
0.000002,1,0.000002,my $self = shift;
0.000018,1,0.000018,$self->{'body'} = $self->_generate_constructor_method_inline;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Method Meta Object for constructors
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
