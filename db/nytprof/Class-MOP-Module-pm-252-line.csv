# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,
0.000000,0,0.000000,package Class::MOP::Module;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Class::MOP::Module::AUTHORITY = 'cpan:STEVAN';
0.000031,1,0.000031,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Class::MOP::Module::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000032,2,0.000016,use strict;
0.000033,2,0.000017,use warnings;
0.000000,0,0.000000,
0.000038,2,0.000019,use Carp         'confess';
0.000034,2,0.000017,use Scalar::Util 'blessed';
0.000000,0,0.000000,
0.000319,2,0.000160,use base 'Class::MOP::Package';
0.000000,0,0.000000,
0.000000,0,0.000000,sub _new {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,return Class::MOP::Class->initialize($class)->new_object(@_)
0.000000,0,0.000000,if $class ne __PACKAGE__;
0.000000,0,0.000000,
0.000000,0,0.000000,my $params = @_ == 1 ? $_[0] : {@_};
0.000000,0,0.000000,return bless {
0.000000,0,0.000000,# Need to quote package to avoid a problem with PPI mis-parsing this
0.000000,0,0.000000,# as a package statement.
0.000000,0,0.000000,
0.000000,0,0.000000,# from Class::MOP::Package
0.000000,0,0.000000,'package' => $params->{package},
0.000000,0,0.000000,namespace => \undef,
0.000000,0,0.000000,
0.000000,0,0.000000,# attributes
0.000000,0,0.000000,version   => \undef,
0.000000,0,0.000000,authority => \undef
0.000000,0,0.000000,} => $class;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub version {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,${$self->get_or_add_package_symbol('$VERSION')};
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub authority {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,${$self->get_or_add_package_symbol('$AUTHORITY')};
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub identifier {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,join '-' => (
0.000000,0,0.000000,$self->name,
0.000000,0,0.000000,($self->version   || ()),
0.000000,0,0.000000,($self->authority || ()),
0.000000,0,0.000000,);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub create {
0.000003,2,0.000002,my $class = shift;
0.000012,2,0.000006,my @args = @_;
0.000000,0,0.000000,
0.000005,2,0.000002,unshift @args, 'package' if @args % 2 == 1;
0.000005,2,0.000003,my %options = @args;
0.000000,0,0.000000,
0.000005,2,0.000002,my $package   = delete $options{package};
0.000004,2,0.000002,my $version   = delete $options{version};
0.000003,2,0.000002,my $authority = delete $options{authority};
0.000000,0,0.000000,
0.000015,2,0.000008,my $meta = $class->SUPER::create($package => %options);
0.000000,0,0.000000,
0.000014,2,0.000007,$meta->_instantiate_module($version, $authority);
0.000000,0,0.000000,
0.000012,2,0.000006,return $meta;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _anon_package_prefix { 'Class::MOP::Module::__ANON__::SERIAL::' }
0.000000,0,0.000000,sub _anon_cache_key      { confess "Modules are not cacheable" }
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000000,0,0.000000,sub _instantiate_module {
0.000003,2,0.000002,my($self, $version, $authority) = @_;
0.000016,2,0.000008,my $package_name = $self->name;
0.000000,0,0.000000,
0.000003,2,0.000002,$self->add_package_symbol('$VERSION' => $version)
0.000000,0,0.000000,if defined $version;
0.000003,2,0.000002,$self->add_package_symbol('$AUTHORITY' => $authority)
0.000000,0,0.000000,if defined $authority;
0.000000,0,0.000000,
0.000011,2,0.000005,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Module Meta Object
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
