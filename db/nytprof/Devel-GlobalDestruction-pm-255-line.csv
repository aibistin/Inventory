# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Devel::GlobalDestruction;
0.000000,0,0.000000,
0.000038,2,0.000019,use strict;
0.000060,2,0.000030,use warnings;
0.000000,0,0.000000,
0.000002,1,0.000002,our $VERSION = '0.11';
0.000000,0,0.000000,
0.000015,1,0.000015,use Sub::Exporter::Progressive -setup => {
0.000000,0,0.000000,exports => [ qw(in_global_destruction) ],
0.000000,0,0.000000,groups  => { default => [ -all ] },
0.000128,1,0.000128,};
0.000000,0,0.000000,
0.000000,0,0.000000,# we run 5.14+ - everything is in core
0.000000,0,0.000000,#
0.000004,1,0.000004,if (defined ${^GLOBAL_PHASE}) {
0.000035,1,0.000035,eval 'sub in_global_destruction () { ${^GLOBAL_PHASE} eq q[DESTRUCT] }; 1'
0.000000,0,0.000000,or die $@;
0.000000,0,0.000000,}
0.000000,0,0.000000,# try to load the xs version if it was compiled
0.000000,0,0.000000,#
0.000000,0,0.000000,elsif (eval {
0.000000,0,0.000000,require Devel::GlobalDestruction::XS;
0.000089,2,0.000045,no warnings 'once';
0.000000,0,0.000000,*in_global_destruction = \&Devel::GlobalDestruction::XS::in_global_destruction;
0.000000,0,0.000000,1;
0.000000,0,0.000000,}) {
0.000000,0,0.000000,# the eval already installed everything, nothing to do
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,# internally, PL_main_start is nulled immediately before entering global destruction
0.000000,0,0.000000,# and we can use B to detect that.  It will also be null before the main runloop starts,
0.000000,0,0.000000,# so we check install a CHECK if needed to detect that.
0.000000,0,0.000000,require B;
0.000000,0,0.000000,my $started = !B::main_start()->isa(q[B::NULL]);
0.000000,0,0.000000,unless ($started) {
0.000000,0,0.000000,# work around 5.6 eval bug
0.000000,0,0.000000,eval '0 && $started; CHECK { $started = 1 }; 1'
0.000000,0,0.000000,or die $@;
0.000000,0,0.000000,}
0.000000,0,0.000000,eval '0 && $started; sub in_global_destruction () { $started && B::main_start()->isa(q[B::NULL]) }; 1'
0.000000,0,0.000000,or die $@;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000008,1,0.000008,1;  # keep require happy
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
