# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moose::Meta::Mixin::AttributeCore;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Moose::Meta::Mixin::AttributeCore::AUTHORITY = 'cpan:STEVAN';
0.000032,1,0.000032,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Moose::Meta::Mixin::AttributeCore::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000036,2,0.000018,use strict;
0.000036,2,0.000018,use warnings;
0.000000,0,0.000000,
0.000224,2,0.000112,use base 'Class::MOP::Mixin::AttributeCore';
0.000000,0,0.000000,
0.000019,1,0.000019,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'isa' => (
0.000000,0,0.000000,reader => '_isa_metadata',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'does' => (
0.000000,0,0.000000,reader => '_does_metadata',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'is' => (
0.000000,0,0.000000,reader => '_is_metadata',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'required' => (
0.000000,0,0.000000,reader => 'is_required',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'lazy' => (
0.000000,0,0.000000,reader => 'is_lazy', Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'lazy_build' => (
0.000000,0,0.000000,reader => 'is_lazy_build',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'coerce' => (
0.000000,0,0.000000,reader => 'should_coerce',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'weak_ref' => (
0.000000,0,0.000000,reader => 'is_weak_ref',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'auto_deref' => (
0.000000,0,0.000000,reader => 'should_auto_deref',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'type_constraint' => (
0.000000,0,0.000000,reader    => 'type_constraint',
0.000000,0,0.000000,predicate => 'has_type_constraint',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'trigger' => (
0.000000,0,0.000000,reader    => 'trigger',
0.000000,0,0.000000,predicate => 'has_trigger',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'handles' => (
0.000000,0,0.000000,reader    => 'handles',
0.000000,0,0.000000,writer    => '_set_handles',
0.000000,0,0.000000,predicate => 'has_handles',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000013,1,0.000013,__PACKAGE__->meta->add_attribute(
0.000000,0,0.000000,'documentation' => (
0.000000,0,0.000000,reader    => 'documentation',
0.000000,0,0.000000,predicate => 'has_documentation',
0.000000,0,0.000000,Class::MOP::_definition_context(),
0.000000,0,0.000000,)
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000017,1,0.000017,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Core attributes shared by attribute metaclasses
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
