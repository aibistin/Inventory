# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moose::Meta::Attribute::Native;
0.000000,0,0.000000,BEGIN {
0.000014,1,0.000014,$Moose::Meta::Attribute::Native::AUTHORITY = 'cpan:STEVAN';
0.000036,1,0.000036,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Moose::Meta::Attribute::Native::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000160,2,0.000080,use Class::Load qw(load_class);
0.000000,0,0.000000,
0.000003,1,0.000003,my @trait_names = qw(Bool Counter Number String Array Hash Code);
0.000000,0,0.000000,
0.000003,1,0.000003,for my $trait_name (@trait_names) {
0.000014,7,0.000002,my $trait_class = "Moose::Meta::Attribute::Native::Trait::$trait_name";
0.000039,7,0.000006,my $meta = Class::MOP::Class->initialize(
0.000000,0,0.000000,"Moose::Meta::Attribute::Custom::Trait::$trait_name"
0.000000,0,0.000000,);
0.000036,7,0.000005,if ($meta->find_method_by_name('register_implementation')) {
0.000000,0,0.000000,my $class = $meta->name->register_implementation;
0.000000,0,0.000000,Moose->throw_error(
0.000000,0,0.000000,"An implementation for $trait_name already exists " .
0.000000,0,0.000000,"(found '$class' when trying to register '$trait_class')"
0.000000,0,0.000000,);
0.000000,0,0.000000,}
0.000000,0,0.000000,$meta->add_method(register_implementation => sub {
0.000000,0,0.000000,# resolve_metatrait_alias will load classes anyway, but throws away
0.000000,0,0.000000,# their error message; we WANT to die if there's a problem
0.000000,0,0.000000,load_class($trait_class);
0.000000,0,0.000000,return $trait_class;
0.000060,7,0.000009,});
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000009,1,0.000009,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Delegate to native Perl types
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
