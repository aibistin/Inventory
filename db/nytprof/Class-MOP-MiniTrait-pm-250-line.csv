# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Class::MOP::MiniTrait;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Class::MOP::MiniTrait::AUTHORITY = 'cpan:STEVAN';
0.000031,1,0.000031,}
0.000000,0,0.000000,{
0.000005,2,0.000003,$Class::MOP::MiniTrait::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000033,2,0.000016,use strict;
0.000035,2,0.000017,use warnings;
0.000000,0,0.000000,
0.000167,2,0.000083,use Class::Load qw(load_class);
0.000000,0,0.000000,
0.000000,0,0.000000,sub apply {
0.000017,8,0.000002,my ( $to_class, $trait ) = @_;
0.000000,0,0.000000,
0.000039,8,0.000005,for ( grep { !ref } $to_class, $trait ) {
0.000073,14,0.000005,load_class($_);
0.000114,14,0.000008,$_ = Class::MOP::Class->initialize($_);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000831,98,0.000008,for my $meth ( grep { $_->package_name ne 'UNIVERSAL' } $trait->get_all_methods ) {
0.000422,58,0.000007,my $meth_name = $meth->name;
0.000000,0,0.000000,
0.000867,58,0.000015,if ( $to_class->find_method_by_name($meth_name) ) {
0.000000,0,0.000000,$to_class->add_around_method_modifier( $meth_name, $meth->body );
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000142,14,0.000010,$to_class->add_method( $meth_name, $meth->clone );
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,# We can't load this with use, since it may be loaded and used from Class::MOP
0.000000,0,0.000000,# (via CMOP::Class, etc). However, if for some reason this module is loaded
0.000000,0,0.000000,# _without_ first loading Class::MOP we need to require Class::MOP so we can
0.000000,0,0.000000,# use it and CMOP::Class.
0.000002,1,0.000002,require Class::MOP;
0.000000,0,0.000000,
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Extremely limited trait application
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
