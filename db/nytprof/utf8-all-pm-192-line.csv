# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package utf8::all;
0.000038,2,0.000019,use strict;
0.000032,2,0.000016,use warnings;
0.000070,2,0.000035,use 5.010; # state
0.000000,0,0.000000,# ABSTRACT: turn on Unicode - all of it
0.000002,1,0.000002,our $VERSION = '0.010'; # VERSION
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000112,2,0.000056,use Import::Into;
0.000092,2,0.000046,use parent qw(Encode charnames utf8 open warnings feature);
0.000000,0,0.000000,
0.000000,0,0.000000,sub import {
0.000002,1,0.000002,my $target = caller;
0.000007,1,0.000007,'utf8'->import::into($target);
0.000007,1,0.000007,'open'->import::into($target, qw{:encoding(UTF-8) :std});
0.000016,1,0.000016,'charnames'->import::into($target, qw{:full :short});
0.000006,1,0.000006,'warnings'->import::into($target, qw{FATAL utf8});
0.000023,1,0.000023,'feature'->import::into($target, qw{unicode_strings}) if $^V >= v5.11.0;
0.000018,1,0.000018,'feature'->import::into($target, qw{unicode_eval fc}) if $^V >= v5.16.0;
0.000000,0,0.000000,
0.000000,0,0.000000,{
0.000180,3,0.000060,no strict qw(refs); ## no critic (TestingAndDebugging::ProhibitNoStrict)
0.000006,1,0.000006,*{$target . '::readdir'} = \&_utf8_readdir;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,# utf8 in @ARGV
0.000002,1,0.000002,state $have_encoded_argv = 0;
0.000006,1,0.000006,_encode_argv() unless $have_encoded_argv++;
0.000000,0,0.000000,
0.000003,1,0.000003,$^H{'utf8::all'} = 1;
0.000000,0,0.000000,
0.000007,1,0.000007,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _encode_argv {
0.000016,1,0.000016,$_ = Encode::decode('UTF-8', $_) for @ARGV;
0.000006,1,0.000006,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _utf8_readdir(*) { ## no critic (Subroutines::ProhibitSubroutinePrototypes)
0.000000,0,0.000000,my $handle = shift;
0.000000,0,0.000000,if (wantarray) {
0.000000,0,0.000000,my @all_files  = CORE::readdir($handle);
0.000000,0,0.000000,$_ = Encode::decode('UTF-8', $_) for @all_files;
0.000000,0,0.000000,return @all_files;
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,my $next_file = CORE::readdir($handle);
0.000000,0,0.000000,$next_file = Encode::decode('UTF-8', $next_file);
0.000000,0,0.000000,return $next_file;
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
