# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Log::Log4perl::Util;
0.000000,0,0.000000,
0.000002,1,0.000002,require Exporter;
0.000003,1,0.000003,our @EXPORT_OK = qw( params_check );
0.000007,1,0.000007,our @ISA       = qw( Exporter );
0.000000,0,0.000000,
0.000322,2,0.000161,use File::Spec;
0.000000,0,0.000000,
0.000000,0,0.000000,###########################################
0.000000,0,0.000000,sub params_check {
0.000000,0,0.000000,###########################################
0.000000,0,0.000000,my( $hash, $required, $optional ) = @_;
0.000000,0,0.000000,
0.000000,0,0.000000,my $pkg       = caller();
0.000000,0,0.000000,my %hash_copy = %$hash;
0.000000,0,0.000000,
0.000000,0,0.000000,if( defined $required ) {
0.000000,0,0.000000,for my $p ( @$required ) {
0.000000,0,0.000000,if( !exists $hash->{ $p } or
0.000000,0,0.000000,!defined $hash->{ $p } ) {
0.000000,0,0.000000,die "$pkg: Required parameter $p missing.";
0.000000,0,0.000000,}
0.000000,0,0.000000,delete $hash_copy{ $p };
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,if( defined $optional ) {
0.000000,0,0.000000,for my $p ( @$optional ) {
0.000000,0,0.000000,delete $hash_copy{ $p };
0.000000,0,0.000000,}
0.000000,0,0.000000,if( scalar keys %hash_copy ) {
0.000000,0,0.000000,die "$pkg: Unknown parameter: ", join( ",", keys %hash_copy );
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,##################################################
0.000000,0,0.000000,sub module_available {  # Check if a module is available
0.000000,0,0.000000,##################################################
0.000004,2,0.000002,my($full_name) = @_;
0.000000,0,0.000000,
0.000000,0,0.000000,# Weird cases like "strict;" (including the semicolon) would 
0.000000,0,0.000000,# succeed with the eval below, so check those up front. 
0.000000,0,0.000000,# I can't believe Perl doesn't have a proper way to check if a 
0.000000,0,0.000000,# module is available or not!
0.000019,2,0.000010,return 0 if $full_name =~ /[^\w:]/;
0.000000,0,0.000000,
0.000010,2,0.000005,local $SIG{__DIE__} = sub {};
0.000000,0,0.000000,
0.000369,2,0.000184,eval "require $full_name";
0.000000,0,0.000000,
0.000003,2,0.000002,if($@) {
0.000000,0,0.000000,return 0;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000021,2,0.000010,return 1;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,##################################################
0.000000,0,0.000000,sub tmpfile_name {  # File::Temp without the bells and whistles
0.000000,0,0.000000,##################################################
0.000000,0,0.000000,
0.000000,0,0.000000,my $name = File::Spec->catfile(File::Spec->tmpdir(), 
0.000000,0,0.000000,'l4p-tmpfile-' . 
0.000000,0,0.000000,"$$-" .
0.000000,0,0.000000,int(rand(9999999)));
0.000000,0,0.000000,
0.000000,0,0.000000,# Some crazy versions of File::Spec use backslashes on Win32
0.000000,0,0.000000,$name =~ s#\\#/#g;
0.000000,0,0.000000,return $name;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
