# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,# This file was created by configpm when Perl was built. Any changes
0.000000,0,0.000000,# made to this file will be lost the next time perl is built.
0.000000,0,0.000000,
0.000000,0,0.000000,# for a description of the variables, please have a look at the
0.000000,0,0.000000,# Glossary file, as written in the Porting folder, or use the url:
0.000000,0,0.000000,# http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary
0.000000,0,0.000000,
0.000000,0,0.000000,package Config;
0.000036,2,0.000018,use strict;
0.000038,2,0.000019,use warnings;
0.000143,2,0.000071,use vars '%Config', '$VERSION';
0.000000,0,0.000000,
0.000002,1,0.000002,$VERSION = "5.018000";
0.000000,0,0.000000,
0.000000,0,0.000000,# Skip @Config::EXPORT because it only contains %Config, which we special
0.000000,0,0.000000,# case below as it's not a function. @Config::EXPORT won't change in the
0.000000,0,0.000000,# lifetime of Perl 5.
0.000005,1,0.000005,my %Export_Cache = (myconfig => 1, config_sh => 1, config_vars => 1,
0.000000,0,0.000000,config_re => 1, compile_date => 1, local_patches => 1,
0.000000,0,0.000000,bincompat_options => 1, non_bincompat_options => 1,
0.000000,0,0.000000,header_files => 1);
0.000000,0,0.000000,
0.000002,1,0.000002,@Config::EXPORT = qw(%Config);
0.000004,1,0.000004,@Config::EXPORT_OK = keys %Export_Cache;
0.000000,0,0.000000,
0.000000,0,0.000000,# Need to stub all the functions to make code such as print Config::config_sh
0.000000,0,0.000000,# keep working
0.000000,0,0.000000,
0.000000,0,0.000000,sub bincompat_options;
0.000000,0,0.000000,sub compile_date;
0.000000,0,0.000000,sub config_re;
0.000000,0,0.000000,sub config_sh;
0.000000,0,0.000000,sub config_vars;
0.000000,0,0.000000,sub header_files;
0.000000,0,0.000000,sub local_patches;
0.000000,0,0.000000,sub myconfig;
0.000000,0,0.000000,sub non_bincompat_options;
0.000000,0,0.000000,
0.000000,0,0.000000,# Define our own import method to avoid pulling in the full Exporter:
0.000000,0,0.000000,sub import {
0.000007,5,0.000001,shift;
0.000016,5,0.000003,@_ = @Config::EXPORT unless @_;
0.000000,0,0.000000,
0.000014,5,0.000003,my @funcs = grep $_ ne '%Config', @_;
0.000011,5,0.000002,my $export_Config = @funcs < @_ ? 1 : 0;
0.000000,0,0.000000,
0.000304,2,0.000152,no strict 'refs';
0.000009,5,0.000002,my $callpkg = caller(0);
0.000018,5,0.000004,foreach my $func (@funcs) {
0.000000,0,0.000000,die qq{"$func" is not exported by the Config module\n}
0.000000,0,0.000000,unless $Export_Cache{$func};
0.000000,0,0.000000,*{$callpkg.'::'.$func} = \&{$func};
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000024,5,0.000005,*{"$callpkg\::Config"} = \%Config if $export_Config;
0.000039,5,0.000008,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000045,1,0.000045,die "Perl lib version (5.18.0) doesn't match executable '$0' version ($])"
0.000000,0,0.000000,unless $^V;
0.000000,0,0.000000,
0.000015,1,0.000015,$^V eq 5.18.0
0.000000,0,0.000000,or die "Perl lib version (5.18.0) doesn't match executable '$0' version (" .
0.000000,0,0.000000,sprintf("v%vd",$^V) . ")";
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000000,0,0.000000,sub FETCH {
0.000022,12,0.000002,my($self, $key) = @_;
0.000000,0,0.000000,
0.000000,0,0.000000,# check for cached value (which may be undef so we use exists not defined)
0.000102,12,0.000008,return exists $self->{$key} ? $self->{$key} : $self->fetch_string($key);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub TIEHASH {
0.000007,1,0.000007,bless $_[1], $_[0];
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub DESTROY { }
0.000000,0,0.000000,
0.000000,0,0.000000,sub AUTOLOAD {
0.000115,1,0.000115,require 'Config_heavy.pl';
0.000026,1,0.000026,goto \&launcher unless $Config::AUTOLOAD =~ /launcher$/;
0.000000,0,0.000000,die "&Config::AUTOLOAD failed on $Config::AUTOLOAD";
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,# tie returns the object, so the value returned to require will be true.
0.000033,1,0.000033,tie %Config, 'Config', {
0.000000,0,0.000000,archlibexp => '/home/austin/perl5/perlbrew/perls/perl-5.18.0/lib/5.18.0/i686-linux',
0.000000,0,0.000000,archname => 'i686-linux',
0.000000,0,0.000000,cc => 'cc',
0.000000,0,0.000000,d_readlink => 'define',
0.000000,0,0.000000,d_symlink => 'define',
0.000000,0,0.000000,dlext => 'so',
0.000000,0,0.000000,dlsrc => 'dl_dlopen.xs',
0.000000,0,0.000000,dont_use_nlink => undef,
0.000000,0,0.000000,exe_ext => '',
0.000000,0,0.000000,inc_version_list => ' ',
0.000000,0,0.000000,intsize => '4',
0.000000,0,0.000000,ldlibpthname => 'LD_LIBRARY_PATH',
0.000000,0,0.000000,libpth => '/usr/local/lib /lib/i386-linux-gnu /lib/../lib /usr/lib/i386-linux-gnu /usr/lib/../lib /lib /usr/lib',
0.000000,0,0.000000,osname => 'linux',
0.000000,0,0.000000,osvers => '3.5.0-23-generic',
0.000000,0,0.000000,path_sep => ':',
0.000000,0,0.000000,privlibexp => '/home/austin/perl5/perlbrew/perls/perl-5.18.0/lib/5.18.0',
0.000000,0,0.000000,scriptdir => '/home/austin/perl5/perlbrew/perls/perl-5.18.0/bin',
0.000000,0,0.000000,sitearchexp => '/home/austin/perl5/perlbrew/perls/perl-5.18.0/lib/site_perl/5.18.0/i686-linux',
0.000000,0,0.000000,sitelibexp => '/home/austin/perl5/perlbrew/perls/perl-5.18.0/lib/site_perl/5.18.0',
0.000000,0,0.000000,so => 'so',
0.000000,0,0.000000,useithreads => undef,
0.000000,0,0.000000,usevendorprefix => undef,
0.000000,0,0.000000,version => '5.18.0',
0.000000,0,0.000000,};
