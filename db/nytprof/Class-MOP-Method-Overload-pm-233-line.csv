# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,
0.000000,0,0.000000,package Class::MOP::Method::Overload;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Class::MOP::Method::Overload::AUTHORITY = 'cpan:STEVAN';
0.000031,1,0.000031,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Class::MOP::Method::Overload::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000033,2,0.000016,use strict;
0.000033,2,0.000016,use warnings;
0.000000,0,0.000000,
0.000035,2,0.000017,use Carp 'confess';
0.000000,0,0.000000,
0.000177,2,0.000088,use base 'Class::MOP::Method';
0.000000,0,0.000000,
0.000000,0,0.000000,sub wrap {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,my (@args) = @_;
0.000000,0,0.000000,unshift @args, 'body' if @args % 2 == 1;
0.000000,0,0.000000,my %params = @args;
0.000000,0,0.000000,
0.000000,0,0.000000,confess "operator is required"
0.000000,0,0.000000,unless exists $params{operator};
0.000000,0,0.000000,
0.000000,0,0.000000,return $class->SUPER::wrap(
0.000000,0,0.000000,name => "($params{operator}",
0.000000,0,0.000000,%params,
0.000000,0,0.000000,);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _new {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,return Class::MOP::Class->initialize($class)->new_object(@_)
0.000000,0,0.000000,if $class ne __PACKAGE__;
0.000000,0,0.000000,
0.000000,0,0.000000,my $params = @_ == 1 ? $_[0] : {@_};
0.000000,0,0.000000,
0.000000,0,0.000000,return bless {
0.000000,0,0.000000,# inherited from Class::MOP::Method
0.000000,0,0.000000,'body'                 => $params->{body},
0.000000,0,0.000000,'associated_metaclass' => $params->{associated_metaclass},
0.000000,0,0.000000,'package_name'         => $params->{package_name},
0.000000,0,0.000000,'name'                 => $params->{name},
0.000000,0,0.000000,'original_method'      => $params->{original_method},
0.000000,0,0.000000,
0.000000,0,0.000000,# defined in this class
0.000000,0,0.000000,'operator'             => $params->{operator},
0.000000,0,0.000000,} => $class;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: Method Meta Object for methods which implement overloading
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
