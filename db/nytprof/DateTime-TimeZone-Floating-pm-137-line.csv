# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package DateTime::TimeZone::Floating;
0.000000,0,0.000000,{
0.000005,2,0.000002,$DateTime::TimeZone::Floating::VERSION = '1.60';
0.000000,0,0.000000,}
0.000000,0,0.000000,BEGIN {
0.000014,1,0.000014,$DateTime::TimeZone::Floating::AUTHORITY = 'cpan:DROLSKY';
0.000022,1,0.000022,}
0.000000,0,0.000000,
0.000032,2,0.000016,use strict;
0.000035,2,0.000017,use warnings;
0.000000,0,0.000000,
0.000305,2,0.000153,use parent 'Class::Singleton', 'DateTime::TimeZone::OffsetOnly';
0.000000,0,0.000000,
0.000000,0,0.000000,sub new {
0.000000,0,0.000000,return shift->instance;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _new_instance {
0.000002,1,0.000002,my $class = shift;
0.000000,0,0.000000,
0.000010,1,0.000010,return bless {
0.000000,0,0.000000,name   => 'floating',
0.000000,0,0.000000,offset => 0
0.000000,0,0.000000,}, $class;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000021,4,0.000005,sub is_floating {1}
0.000000,0,0.000000,
0.000000,0,0.000000,sub STORABLE_thaw {
0.000000,0,0.000000,my $self       = shift;
0.000000,0,0.000000,my $cloning    = shift;
0.000000,0,0.000000,my $serialized = shift;
0.000000,0,0.000000,
0.000000,0,0.000000,my $class = ref $self || $self;
0.000000,0,0.000000,
0.000000,0,0.000000,my $obj;
0.000000,0,0.000000,if ( $class->isa(__PACKAGE__) ) {
0.000000,0,0.000000,$obj = __PACKAGE__->new();
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$obj = $class->new();
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,%$self = %$obj;
0.000000,0,0.000000,
0.000000,0,0.000000,return $self;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: A time zone that is always local
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
