# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Eval::Closure::Sandbox_118;
0.000000,0,0.000000,sub {
0.000002,1,0.000002,my $defaults = ${$_[0]};
0.000000,0,0.000000,sub {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,$class = Scalar::Util::blessed($class) || $class;
0.000000,0,0.000000,return Class::MOP::Class->initialize($class)->new_object(@_)
0.000000,0,0.000000,if $class ne 'Moose::Meta::Role::Composite';
0.000000,0,0.000000,my $params = @_ == 1 ? $_[0] : {@_};
0.000000,0,0.000000,my $instance = bless {} => $class;
0.000000,0,0.000000,if (exists $params->{'_methods'}) {
0.000000,0,0.000000,$instance->{"_methods"} = $params->{'_methods'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"_methods"} = $defaults->[0]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'after_method_modifiers'}) {
0.000000,0,0.000000,$instance->{"after_method_modifiers"} = $params->{'after_method_modifiers'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"after_method_modifiers"} = $defaults->[1]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'application_role_summation_class'}) {
0.000000,0,0.000000,$instance->{"application_role_summation_class"} = $params->{'application_role_summation_class'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"application_role_summation_class"} = $defaults->[2];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'application_to_class_class'}) {
0.000000,0,0.000000,$instance->{"application_to_class_class"} = $params->{'application_to_class_class'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"application_to_class_class"} = $defaults->[3];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'application_to_instance_class'}) {
0.000000,0,0.000000,$instance->{"application_to_instance_class"} = $params->{'application_to_instance_class'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"application_to_instance_class"} = $defaults->[4];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'application_to_role_class'}) {
0.000000,0,0.000000,$instance->{"application_to_role_class"} = $params->{'application_to_role_class'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"application_to_role_class"} = $defaults->[5];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'applied_attribute_metaclass'}) {
0.000000,0,0.000000,$instance->{"applied_attribute_metaclass"} = $params->{'applied_attribute_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"applied_attribute_metaclass"} = $defaults->[6];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'around_method_modifiers'}) {
0.000000,0,0.000000,$instance->{"around_method_modifiers"} = $params->{'around_method_modifiers'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"around_method_modifiers"} = $defaults->[7]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'attribute_metaclass'}) {
0.000000,0,0.000000,$instance->{"attribute_metaclass"} = $params->{'attribute_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"attribute_metaclass"} = $defaults->[8];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'attributes'}) {
0.000000,0,0.000000,$instance->{"attributes"} = $params->{'attributes'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"attributes"} = $defaults->[9]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,{
0.000000,0,0.000000,$instance->{"authority"} = $defaults->[10]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'before_method_modifiers'}) {
0.000000,0,0.000000,$instance->{"before_method_modifiers"} = $params->{'before_method_modifiers'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"before_method_modifiers"} = $defaults->[11]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'conflicting_method_metaclass'}) {
0.000000,0,0.000000,$instance->{"conflicting_method_metaclass"} = $params->{'conflicting_method_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"conflicting_method_metaclass"} = $defaults->[12];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'excluded_roles_map'}) {
0.000000,0,0.000000,$instance->{"excluded_roles_map"} = $params->{'excluded_roles_map'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"excluded_roles_map"} = $defaults->[13]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'method_metaclass'}) {
0.000000,0,0.000000,$instance->{"method_metaclass"} = $params->{'method_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"method_metaclass"} = $defaults->[14];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'name'}) {
0.000000,0,0.000000,$instance->{"name"} = $params->{'name'};
0.000000,0,0.000000,}
0.000000,0,0.000000,{
0.000000,0,0.000000,$instance->{"namespace"} = $defaults->[16]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'override_method_modifiers'}) {
0.000000,0,0.000000,$instance->{"override_method_modifiers"} = $params->{'override_method_modifiers'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"override_method_modifiers"} = $defaults->[17]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'package'}) {
0.000000,0,0.000000,$instance->{"package"} = $params->{'package'};
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'required_method_metaclass'}) {
0.000000,0,0.000000,$instance->{"required_method_metaclass"} = $params->{'required_method_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"required_method_metaclass"} = $defaults->[19];
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'required_methods'}) {
0.000000,0,0.000000,$instance->{"required_methods"} = $params->{'required_methods'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"required_methods"} = $defaults->[20]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'roles'}) {
0.000000,0,0.000000,$instance->{"roles"} = $params->{'roles'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"roles"} = $defaults->[21]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,{
0.000000,0,0.000000,$instance->{"version"} = $defaults->[22]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'wrapped_method_metaclass'}) {
0.000000,0,0.000000,$instance->{"wrapped_method_metaclass"} = $params->{'wrapped_method_metaclass'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"wrapped_method_metaclass"} = $defaults->[23];
0.000000,0,0.000000,}
0.000000,0,0.000000,return $instance
0.000000,0,0.000000,}
0.000016,2,0.000008,}
0.000000,0,0.000000,;
