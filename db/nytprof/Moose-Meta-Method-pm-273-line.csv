# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moose::Meta::Method;
0.000000,0,0.000000,BEGIN {
0.000008,1,0.000008,$Moose::Meta::Method::AUTHORITY = 'cpan:STEVAN';
0.000030,1,0.000030,}
0.000000,0,0.000000,{
0.000005,2,0.000002,$Moose::Meta::Method::VERSION = '2.1005';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000048,2,0.000024,use strict;
0.000033,2,0.000016,use warnings;
0.000000,0,0.000000,
0.000032,2,0.000016,use Class::MOP::MiniTrait;
0.000000,0,0.000000,
0.000241,2,0.000121,use base 'Class::MOP::Method';
0.000000,0,0.000000,
0.000006,1,0.000006,Class::MOP::MiniTrait::apply(__PACKAGE__, 'Moose::Meta::Object::Trait');
0.000000,0,0.000000,
0.000000,0,0.000000,sub _error_thrower {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,require Moose::Meta::Class;
0.000000,0,0.000000,( ref $self && $self->associated_metaclass ) || "Moose::Meta::Class";
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub throw_error {
0.000000,0,0.000000,my $self = shift;
0.000000,0,0.000000,my $inv = $self->_error_thrower;
0.000000,0,0.000000,unshift @_, "message" if @_ % 2 == 1;
0.000000,0,0.000000,unshift @_, method => $self if ref $self;
0.000000,0,0.000000,unshift @_, $inv;
0.000000,0,0.000000,my $handler = $inv->can("throw_error");
0.000000,0,0.000000,goto $handler; # to avoid incrementing depth by 1
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub _inline_throw_error {
0.000020,10,0.000002,my ( $self, $msg, $args ) = @_;
0.000000,0,0.000000,
0.000054,10,0.000005,my $inv = $self->_error_thrower;
0.000000,0,0.000000,# XXX ugh
0.000088,10,0.000009,$inv = 'Moose::Meta::Class' unless $inv->can('_inline_throw_error');
0.000000,0,0.000000,
0.000000,0,0.000000,# XXX ugh ugh UGH
0.000063,10,0.000006,my $class = $self->associated_metaclass;
0.000030,10,0.000003,if ($class) {
0.000160,10,0.000016,my $class_name = B::perlstring($class->name);
0.000128,10,0.000013,my $meth_name = B::perlstring($self->name);
0.000031,10,0.000003,$args = 'method => Class::MOP::class_of(' . $class_name . ')'
0.000000,0,0.000000,. '->find_method_by_name(' . $meth_name . '), '
0.000000,0,0.000000,. (defined $args ? $args : '');
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000090,10,0.000009,return $inv->_inline_throw_error($msg, $args)
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000005,1,0.000005,1;
0.000000,0,0.000000,
0.000000,0,0.000000,# ABSTRACT: A Moose Method metaclass
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
