# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package subs;
0.000000,0,0.000000,
0.000002,1,0.000002,our $VERSION = '1.01';
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 NAME
0.000000,0,0.000000,
0.000000,0,0.000000,subs - Perl pragma to predeclare sub names
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 SYNOPSIS
0.000000,0,0.000000,
0.000000,0,0.000000,use subs qw(frob);
0.000000,0,0.000000,frob 3..10;
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 DESCRIPTION
0.000000,0,0.000000,
0.000000,0,0.000000,This will predeclare all the subroutine whose names are 
0.000000,0,0.000000,in the list, allowing you to use them without parentheses
0.000000,0,0.000000,even before they're declared.
0.000000,0,0.000000,
0.000000,0,0.000000,Unlike pragmas that affect the C<$^H> hints variable, the C<use vars> and
0.000000,0,0.000000,C<use subs> declarations are not BLOCK-scoped.  They are thus effective
0.000000,0,0.000000,for the entire package in which they appear.  You may not rescind such
0.000000,0,0.000000,declarations with C<no vars> or C<no subs>.
0.000000,0,0.000000,
0.000000,0,0.000000,See L<perlmodlib/Pragmatic Modules> and L<strict/strict subs>.
0.000000,0,0.000000,
0.000000,0,0.000000,=cut
0.000000,0,0.000000,
0.000013,1,0.000013,require 5.000;
0.000000,0,0.000000,
0.000000,0,0.000000,sub import {
0.000002,1,0.000002,my $callpack = caller;
0.000002,1,0.000002,my $pack = shift;
0.000002,1,0.000002,my @imports = @_;
0.000010,1,0.000010,foreach $sym (@imports) {
0.000008,1,0.000008,*{"${callpack}::$sym"} = \&{"${callpack}::$sym"};
0.000000,0,0.000000,}
0.000000,0,0.000000,};
0.000000,0,0.000000,
0.000004,1,0.000004,1;
