# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Eval::Closure::Sandbox_82;
0.000000,0,0.000000,sub {
0.000002,1,0.000002,my $defaults = ${$_[0]};
0.000000,0,0.000000,sub {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,$class = Scalar::Util::blessed($class) || $class;
0.000000,0,0.000000,return Class::MOP::Class->initialize($class)->new_object(@_)
0.000000,0,0.000000,if $class ne 'Moose::Meta::TypeCoercion';
0.000000,0,0.000000,my $params = @_ == 1 ? $_[0] : {@_};
0.000000,0,0.000000,my $instance = bless {} => $class;
0.000000,0,0.000000,if (exists $params->{'compiled_type_coercion'}) {
0.000000,0,0.000000,$instance->{"compiled_type_coercion"} = $params->{'compiled_type_coercion'};
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'type_coercion_map'}) {
0.000000,0,0.000000,$instance->{"type_coercion_map"} = $params->{'type_coercion_map'};
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,$instance->{"type_coercion_map"} = $defaults->[1]->($instance);
0.000000,0,0.000000,}
0.000000,0,0.000000,if (exists $params->{'type_constraint'}) {
0.000000,0,0.000000,$instance->{"type_constraint"} = $params->{'type_constraint'};
0.000000,0,0.000000,Scalar::Util::weaken( $instance->{"type_constraint"} )
0.000000,0,0.000000,if ref $params->{'type_constraint'};
0.000000,0,0.000000,}
0.000000,0,0.000000,return $instance
0.000000,0,0.000000,}
0.000014,2,0.000007,}
0.000000,0,0.000000,;
