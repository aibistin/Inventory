# Profile data generated by Devel::NYTProf::Reader
# Version: v5.06
# More information at http://search.cpan.org/dist/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package B::Hooks::EndOfScope::XS;
0.000000,0,0.000000,BEGIN {
0.000012,1,0.000012,$B::Hooks::EndOfScope::XS::AUTHORITY = 'cpan:FLORA';
0.000036,1,0.000036,}
0.000000,0,0.000000,{
0.000005,2,0.000003,$B::Hooks::EndOfScope::XS::VERSION = '0.12';
0.000000,0,0.000000,}
0.000000,0,0.000000,# ABSTRACT: Execute code after a scope finished compilation - XS implementation
0.000000,0,0.000000,
0.000032,2,0.000016,use strict;
0.000073,2,0.000037,use warnings;
0.000000,0,0.000000,
0.000000,0,0.000000,BEGIN {
0.000002,1,0.000002,require Module::Runtime;
0.000000,0,0.000000,# Adjust the Makefile.PL if changing this minimum version
0.000010,1,0.000010,Module::Runtime::use_module('Variable::Magic', '0.48');
0.000034,1,0.000034,}
0.000000,0,0.000000,
0.000019,1,0.000019,use Sub::Exporter::Progressive -setup => {
0.000000,0,0.000000,exports => ['on_scope_end'],
0.000000,0,0.000000,groups  => { default => ['on_scope_end'] },
0.000153,1,0.000153,};
0.000000,0,0.000000,
0.000000,0,0.000000,my $wiz = Variable::Magic::wizard
0.000113,19,0.000006,data => sub { [$_[1]] },
0.000313,38,0.000008,free => sub { $_->() for @{ $_[1] }; () },
0.000000,0,0.000000,# When someone localise %^H, our magic doesn't want to be copied
0.000000,0,0.000000,# down. We want it to be around only for the scope we've initially
0.000000,0,0.000000,# attached ourselfs to. Merely having MGf_LOCAL and a noop svt_local
0.000000,0,0.000000,# callback achieves this. If anything wants to attach more magic of our
0.000000,0,0.000000,# kind to a localised %^H, things will continue to just work as we'll be
0.000000,0,0.000000,# attached with a new and empty callback list.
0.000007,1,0.000007,local => \undef
0.000000,0,0.000000,;
0.000000,0,0.000000,
0.000000,0,0.000000,sub on_scope_end (&) {
0.000029,19,0.000002,my $cb = shift;
0.000000,0,0.000000,
0.000039,19,0.000002,$^H |= 0x020000;
0.000000,0,0.000000,
0.000254,19,0.000013,if (my $stack = Variable::Magic::getdata %^H, $wiz) {
0.000000,0,0.000000,push @{ $stack }, $cb;
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000244,19,0.000013,Variable::Magic::cast %^H, $wiz, $cb;
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,
0.000005,1,0.000005,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
